{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ReadBlob",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "onpermtoblob",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RepoID as string,",
				"          FileListUUID as string,",
				"          SubFilePath as string,",
				"          FileName as string,",
				"          FileSize as string,",
				"          FileLastModifiedDT as string,",
				"          FileCreatedDT as string,",
				"          TAG_PROTECT as string,",
				"          Path_lvl1 as string,",
				"          Path_lvl2 as string,",
				"          Path_lvl3 as string,",
				"          Path_lvl4 as string,",
				"          ProcessState as string,",
				"          ErrorCode as string,",
				"          ErrorCode2 as string,",
				"          AnnexationStartDate as string,",
				"          AnnexationEndDate as string,",
				"          AnnexLocation as string,",
				"          AnnexMD5Source as string,",
				"          AnnexMD5SDestination as string,",
				"          RestoreMD5 as string,",
				"          RestoreReason as string,",
				"          RestoreReasonFreeText as string,",
				"          UserName as string,",
				"          RestoreStartDate as string,",
				"          RestoreEndDate as string,",
				"          CleardownDate as string,",
				"          CleardownActionID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: ['','Archive']) ~> source1",
				"source1 filter(ProcessState=='AP') ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {{\"id\":1} as string,",
				"          {\"name\":\"Leanne Graham\"} as string,",
				"          {\"username\":\"Bret\"} as string,",
				"          {\"email\":\"Sincere@april.biz\"} as string,",
				"          {\"address\":{\"street\":\"Kulas Light\"} as string,",
				"          {\"suite\":\"Apt. 556\"} as string,",
				"          {\"city\":\"Gwenborough\"} as string,",
				"          {\"zipcode\":\"92998-3874\"} as string,",
				"          {\"geo\":{\"lat\":\"-37.3159\"} as string,",
				"          {\"lng\":\"81.1496\"}}} as string,",
				"          {\"phone\":\"1-770-736-8031 x56442\"} as string,",
				"          {\"website\":\"hildegard.org\"} as string,",
				"          {\"company\":{\"name\":\"Romaguera-Crona\"} as string,",
				"          {\"catchPhrase\":\"Multi-layered client-server neural-net\"} as string,",
				"          {\"bs\":\"harness real-time e-markets\"}}} as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}